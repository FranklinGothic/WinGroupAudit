share_cmds:
    # Get all non-administrative shares (excludes shares ending with $)
    get_all_shares: |
        Get-SmbShare | Select-Object -ExpandProperty Name
    
    # Get all groups/users with access to a specific share
    associated_groups: |
        $shareName = "{option}"
        Get-SmbShareAccess -Name $shareName | ForEach-Object {{ $_.AccountName -replace '^.*\\', '' }}

group_cmds:
    # Check if an object is a group by examining its object class
    group_filtering: |
        $groupName = "{option}"
        Get-ADObject -Filter {{ SamAccountName -eq $groupName }} -Properties objectClass | Select-Object -ExpandProperty ObjectClass
    
    # Get all nested groups within a parent group (not users)
    get_group_children: |
        $groupName = "{option}"
        Get-ADGroupMember -Identity $groupName | Select-Object -ExpandProperty Name
    
    # Verify that a group exists in Active Directory
    check_group_exists: |
        $groupName = "{option}"
        Get-ADGroup -Identity $groupName | Select-Object -ExpandProperty ObjectClass

    # Verify that a group's name in AD is the same as the one given - exists bc ps doesn't care about capitalization but when equating names it does

    check_group_name: |
        $groupName = "{option}"
        Get-ADGroup -Identity $groupName | Select-Object -ExpandProperty Name
